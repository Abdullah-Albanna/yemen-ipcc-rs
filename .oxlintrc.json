{
  "$schema": "./node_modules/oxlint/configuration_schema.json",
  "plugins": ["import", "typescript", "unicorn", "jsx-a11y", "react-perf"],
  "env": {
    "browser": true,
    "node": true,
    "es2021": true
  },
  "globals": {
    "foo": "readonly"
  },
  "settings": {
    "import/resolver": {
      "node": {
        "paths": ["src"], // Add paths to resolve modules correctly
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "rules": {
    "eqeqeq": "warn", // Enforce the use of strict equality (===, !==)
    "import/no-cycle": "error", // Disallow circular dependencies
    "unicorn/no-null": "warn", // Avoid using `null` (favor `undefined`)
    "no-console": "warn", // Warn when `console` is used
    "import/order": [
      "error",
      {
        "groups": [
          ["builtin", "external"],
          "internal",
          ["parent", "sibling", "index"]
        ],
        "newlines-between": "always"
      }
    ],
    "jsx-a11y/alt-text": "warn", // Ensure images have alt text for accessibility
    "react-perf/jsx-no-new-array-as-prop": "error" // Prevent passing new arrays as props in React components
  },
  "overrides": [
    {
      "files": ["*.test.ts", "*.spec.ts"], // Apply overrides to test files
      "rules": {
        "@typescript-eslint/no-explicit-any": "off", // Allow `any` in tests
        "@typescript-eslint/explicit-module-boundary-types": "off" // Allow missing return types in test files
      }
    },
    {
      "files": ["*.tsx", "*.jsx"], // Apply specific rules for React files
      "rules": {
        "react/prop-types": "off", // Disable prop-types in TypeScript React files (use TypeScript types instead)
        "react/jsx-filename-extension": [
          "error",
          { "extensions": [".tsx", ".jsx"] }
        ] // Enforce `.tsx` for React components
      }
    }
  ]
}
